# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Board {
  id: String!
  boardName: String!
  createDate: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type FoodType {
  id: String!
  typeName: String!
}

type Owner {
  id: String!
  ownerLoginId: String!
  ownerName: String!
  ownerRrn: String!
  ownerPhone: String!
  ownerEmail: String!
  ownerNickname: String!
  ownerJoinDate: DateTime!
  ownerSubscStatus: Boolean!
}

type Store {
  id: String!
  owner: Owner!
  storeName: String!
  address: String!
  latitude: Float!
  longitude: Float!
  category: String!
  createDate: DateTime!
}

type UserGrade {
  id: String!
  gradeName: String!
}

type User {
  id: String!
  userGrade: UserGrade!
  userLoginId: String!
  userName: String!
  userRrn: String!
  userPhone: String!
  userEmail: String!
  userNickname: String!
  userJoinDate: DateTime!
}

type Post {
  id: String!
  board: Board!
  store: Store!
  foodType: FoodType!
  user: User!
  tags: [Tag!]!
  title: String!
  contents: String!
  likeCount: Int!
  dislikeCount: Int!
  hitCount: Int!
  createDate: DateTime!
  updateDate: DateTime
}

type Tag {
  id: String!
  tagName: String!
  posts: [Post!]!
}

type Product {
  id: String!
  productName: String!
  description: String!
  price: Int!
}

type Query {
  fetchBoards: [Board!]!
  fetchBoardsWithDeleted: [Board!]!
  fetchBoard(boardId: String!): Board!
  fetchFoodTypes: [FoodType!]!
  fetchFoodTypesWithDeleted: [FoodType!]!
  fetchFoodType(foodTypeId: String!): FoodType!
  fetchOwners: [Owner!]!
  fetchOwnersWithDeleted: [Owner!]!
  fetchOwner(ownerId: String!): Owner!
  fetchPosts: [Post!]!
  fetchPostsWithDeleted: [Post!]!
  fetchPost(postId: String!): Post!
  fetchProducts: [Product!]!
  fetchProductsWithDeleted: [Product!]!
  fetchProduct(productId: String!): Product!
  fetchStores: [Store!]!
  fetchStoresWithDeleted: [Store!]!
  fetchStore(storeId: String!): Store!
  fetchUsers: [User!]!
  fetchUsersWithDeleted: [User!]!
  fetchUser(userId: String!): User!
  fetchUserGrades: [UserGrade!]!
  fetchUserGradesWithDeleted: [UserGrade!]!
  fetchUserGrade(userGradeId: String!): UserGrade!
}

type Mutation {
  createBoard(createBoardInput: CreateBoardInput!): Board!
  updateBoard(boardId: String!, updateBoardInput: UpdateBoardInput!): Board!
  deleteBoard(boardId: String!): Boolean!
  restoreBoard(boardId: String!): Boolean!
  createFoodType(typeName: String!): FoodType!
  updateFoodType(foodTypeId: String!, typeName: String!): FoodType!
  deleteFoodType(foodTypeId: String!): Boolean!
  restoreFoodType(foodTypeId: String!): Boolean!
  createOwner(createOwnerInput: CreateOwnerInput!): Owner!
  updateOwner(ownerId: String!, updateOwnerInput: UpdateOwnerInput!): Owner!
  deleteOwner(ownerId: String!): Boolean!
  restoreOwner(ownerId: String!): Boolean!
  createPost(createPostInput: CreatePostInput!): Post!
  updatePost(postId: String!, updatePostInput: UpdatePostInput!): Post!
  deletePost(postId: String!): Boolean!
  restorePost(postId: String!): Boolean!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(productId: String!, updateProductInput: UpdateProductInput!): Product!
  deleteProduct(productId: String!): Boolean!
  restoreProduct(productId: String!): Boolean!
  createStore(createStoreInput: CreateStoreInput!): Store!
  updateStore(storeId: String!, updateStoreInput: UpdateStoreInput!): Store!
  deleteStore(storeId: String!): Boolean!
  restoreStore(storeId: String!): Boolean!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(userId: String!, updateUserInput: UpdateUserInput!): User!
  deleteUser(userId: String!): Boolean!
  restoreUser(userId: String!): Boolean!
  createUserGrade(gradeName: String!): UserGrade!
  updateUserGrade(userGradeId: String!, gradeName: String!): UserGrade!
  deleteUserGrade(userGradeId: String!): Boolean!
  restoreUserGrade(userGradeId: String!): Boolean!
}

input CreateBoardInput {
  boardName: String!
  description: String!
}

input UpdateBoardInput {
  boardName: String
  description: String
}

input CreateOwnerInput {
  ownerLoginId: String!
  ownerPassword: String!
  ownerName: String!
  ownerRrn: String!
  ownerPhone: String!
  ownerEmail: String!
  ownerNickname: String!
}

input UpdateOwnerInput {
  ownerLoginId: String
  ownerPassword: String
  ownerName: String
  ownerRrn: String
  ownerPhone: String
  ownerEmail: String
  ownerNickname: String
}

input CreatePostInput {
  title: String!
  contents: String!
  likeCount: Int
  dislikeCount: Int
  hitCount: Int
  updateDate: DateTime
  boardId: String!
  storeId: String!
  foodTypeId: String!
  userId: String!
  tags: [String!]!
}

input UpdatePostInput {
  title: String
  contents: String
  likeCount: Int
  dislikeCount: Int
  hitCount: Int
  updateDate: DateTime
  boardId: String
  storeId: String
  foodTypeId: String
  userId: String
  tags: [String!]
}

input CreateProductInput {
  productName: String!
  description: String!
  price: Int!
}

input UpdateProductInput {
  productName: String
  description: String
  price: Int
}

input CreateStoreInput {
  storeName: String!
  address: String!
  latitude: Float!
  longitude: Float!
  category: String!
  ownerId: String!
}

input UpdateStoreInput {
  storeName: String
  address: String
  latitude: Float
  longitude: Float
  category: String
  ownerId: String
}

input CreateUserInput {
  userLoginId: String!
  userPassword: String!
  userName: String!
  userRrn: String!
  userPhone: String!
  userEmail: String!
  userNickname: String!
  userGradeId: String!
}

input UpdateUserInput {
  userLoginId: String
  userPassword: String
  userName: String
  userRrn: String
  userPhone: String
  userEmail: String
  userNickname: String
  userGradeId: String
}